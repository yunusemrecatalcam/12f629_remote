

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 15 16:41:53 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F629
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x5E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F629 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0019                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0019                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0019                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0090                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135                           
   136                           	psect	nvBANK0
   137  0033                     __pnvBANK0:	
   138  0033                     _timetochange:	
   139  0033                     	ds	4
   140  000B                     _INTCONbits	set	11
   141  0019                     _CMCON	set	25
   142  0005                     _GPIObits	set	5
   143  0081                     _OPTION_REGbits	set	129
   144  0085                     _TRISIObits	set	133
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  0010                     start_initialization:	
   150  0010                     __initialization:	
   151                           
   152                           ; Clear objects allocated to BANK0
   153  0010  1283               	bcf	3,5	;RP0=0, select bank0
   154  0011  01B7               	clrf	__pbssBANK0& (0+127)
   155  0012  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   156  0013  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   157  0014  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   158  0015                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161  0015                     __end_of__initialization:	
   162  0015  0183               	clrf	3
   163  0016  2817               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	bssBANK0
   166  0037                     __pbssBANK0:	
   167  0037                     _timetick:	
   168  0037                     	ds	4
   169                           
   170                           	psect	cstackCOMMON
   171  0000                     __pcstackCOMMON:	
   172  0000                     ??_IO_init:	
   173  0000                     ??_Timer_init:	
   174                           ; 1 bytes @ 0x0
   175                           
   176                           
   177                           	psect	cstackBANK0
   178  0020                     __pcstackBANK0:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0020                     ?_IO_init:	
   182  0020                     ?_Timer_init:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0020                     ?_main:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0020                     ?_kes:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0020                     ??_kes:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196  0020                     	ds	4
   197  0024                     ?_led_click:	
   198  0024                     led_click@times:	
   199                           ; 1 bytes @ 0x4
   200                           
   201                           
   202                           ; 2 bytes @ 0x4
   203  0024                     	ds	2
   204  0026                     ??_led_click:	
   205                           
   206                           ; 1 bytes @ 0x6
   207  0026                     	ds	3
   208  0029                     led_click@i:	
   209                           
   210                           ; 2 bytes @ 0x9
   211  0029                     	ds	2
   212  002B                     ??_main:	
   213                           
   214                           ; 1 bytes @ 0xB
   215  002B                     	ds	8
   216                           
   217                           	psect	maintext
   218  0017                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 19 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, pclath, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : B00/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0
   238 ;;      Params:         0       0
   239 ;;      Locals:         0       0
   240 ;;      Temps:          0       8
   241 ;;      Totals:         0       8
   242 ;;Total ram usage:        8 bytes
   243 ;; Hardware stack levels required when called:    2
   244 ;; This function calls:
   245 ;;		_IO_init
   246 ;;		_Timer_init
   247 ;;		_led_click
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0017                     _main:	
   256                           
   257                           ;main.c: 21: IO_init();
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261  0017  20D9               	fcall	_IO_init
   262                           
   263                           ;main.c: 22: Timer_init();
   264  0018  20CE               	fcall	_Timer_init
   265                           
   266                           ;main.c: 24: GPIObits.GP1 =1;
   267  0019  1283               	bcf	3,5	;RP0=0, select bank0
   268  001A  1485               	bsf	5,1	;volatile
   269  001B                     L1:	
   270                           
   271                           ;main.c: 25: timetochange=timetick;
   272  001B  083A               	movf	_timetick+3,w
   273  001C  00B6               	movwf	_timetochange+3
   274  001D  0839               	movf	_timetick+2,w
   275  001E  00B5               	movwf	_timetochange+2
   276  001F  0838               	movf	_timetick+1,w
   277  0020  00B4               	movwf	_timetochange+1
   278  0021  0837               	movf	_timetick,w
   279  0022  00B3               	movwf	_timetochange
   280  0023                     l606:	
   281                           ;main.c: 27: while(1){
   282                           
   283                           
   284                           ;main.c: 28: if(timetick-timetochange>=1000){
   285  0023  0837               	movf	_timetick,w
   286  0024  00AB               	movwf	??_main
   287  0025  0838               	movf	_timetick+1,w
   288  0026  00AC               	movwf	??_main+1
   289  0027  0839               	movf	_timetick+2,w
   290  0028  00AD               	movwf	??_main+2
   291  0029  083A               	movf	_timetick+3,w
   292  002A  00AE               	movwf	??_main+3
   293  002B  0933               	comf	_timetochange,w
   294  002C  00AF               	movwf	??_main+4
   295  002D  0934               	comf	_timetochange+1,w
   296  002E  00B0               	movwf	??_main+5
   297  002F  0935               	comf	_timetochange+2,w
   298  0030  00B1               	movwf	??_main+6
   299  0031  0936               	comf	_timetochange+3,w
   300  0032  00B2               	movwf	??_main+7
   301  0033  0AAF               	incf	??_main+4,f
   302  0034  1903               	skipnz
   303  0035  0AB0               	incf	??_main+5,f
   304  0036  1903               	skipnz
   305  0037  0AB1               	incf	??_main+6,f
   306  0038  1903               	skipnz
   307  0039  0AB2               	incf	??_main+7,f
   308  003A  082F               	movf	??_main+4,w
   309  003B  07AB               	addwf	??_main,f
   310  003C  0830               	movf	??_main+5,w
   311  003D  1803               	skipnc
   312  003E  0F30               	incfsz	??_main+5,w
   313  003F  2841               	goto	u90
   314  0040  2842               	goto	u91
   315  0041                     u90:	
   316  0041  07AC               	addwf	??_main+1,f
   317  0042                     u91:	
   318  0042  0831               	movf	??_main+6,w
   319  0043  1803               	skipnc
   320  0044  0F31               	incfsz	??_main+6,w
   321  0045  2847               	goto	u92
   322  0046  2848               	goto	u93
   323  0047                     u92:	
   324  0047  07AD               	addwf	??_main+2,f
   325  0048                     u93:	
   326  0048  0832               	movf	??_main+7,w
   327  0049  1803               	skipnc
   328  004A  0A32               	incf	??_main+7,w
   329  004B  07AE               	addwf	??_main+3,f
   330  004C  082E               	movf	??_main+3,w
   331  004D  1D03               	btfss	3,2
   332  004E  285C               	goto	l608
   333  004F  082D               	movf	??_main+2,w
   334  0050  1D03               	btfss	3,2
   335  0051  285C               	goto	l608
   336  0052  3003               	movlw	3
   337  0053  022C               	subwf	??_main+1,w
   338  0054  1D03               	skipz
   339  0055  285A               	goto	u103
   340  0056  30E8               	movlw	232
   341  0057  022B               	subwf	??_main,w
   342  0058  1D03               	skipz
   343  0059  285A               	goto	u103
   344  005A                     u103:	
   345  005A  1C03               	btfss	3,0
   346  005B  2823               	goto	l606
   347  005C                     l608:	
   348                           
   349                           ;main.c: 29: GPIObits.GP1^=1;
   350  005C  0C05               	rrf	5,w	;volatile
   351  005D  3901               	andlw	1
   352  005E  00AB               	movwf	??_main
   353  005F  3001               	movlw	1
   354  0060  06AB               	xorwf	??_main,f
   355  0061  0DAB               	rlf	??_main,f
   356  0062  0805               	movf	5,w	;volatile
   357  0063  062B               	xorwf	??_main,w
   358  0064  39FD               	andlw	-3
   359  0065  062B               	xorwf	??_main,w
   360  0066  0085               	movwf	5	;volatile
   361  0067  281B               	goto	L1
   362  0068                     l612:	
   363                           ;main.c: 30: timetochange=timetick;
   364                           
   365                           
   366                           ;main.c: 36: led_click(1);
   367  0068  3001               	movlw	1
   368  0069  286D               	goto	L2
   369  006A                     l614:	
   370                           ;main.c: 37: }else{
   371                           
   372                           
   373                           ;main.c: 39: led_click(2);
   374  006A  3002               	movlw	2
   375  006B  286D               	goto	L2
   376  006C                     l616:	
   377                           ;main.c: 40: }else{
   378                           
   379                           
   380                           ;main.c: 42: led_click(3);
   381  006C  3003               	movlw	3
   382  006D                     L2:	
   383  006D  00A4               	movwf	led_click@times
   384  006E  3000               	movlw	0
   385  006F  00A5               	movwf	led_click@times+1
   386  0070  207C               	fcall	_led_click
   387  0071                     l21:	
   388                           ;main.c: 31: }
   389                           ;main.c: 32: }
   390                           ;main.c: 33: while (1) {
   391                           
   392                           ;main.c: 43: }else{
   393                           
   394                           
   395                           ;main.c: 35: if(GPIObits.GP2){
   396  0071  1283               	bcf	3,5	;RP0=0, select bank0
   397  0072  1905               	btfsc	5,2	;volatile
   398  0073  2868               	goto	l612
   399                           
   400                           ;main.c: 38: if(GPIObits.GP3){
   401  0074  1985               	btfsc	5,3	;volatile
   402  0075  286A               	goto	l614
   403                           
   404                           ;main.c: 41: if(GPIObits.GP4){
   405  0076  1A05               	btfsc	5,4	;volatile
   406  0077  286C               	goto	l616
   407                           
   408                           ;main.c: 44: if(GPIObits.GP5){
   409  0078  1E85               	btfss	5,5	;volatile
   410  0079  2871               	goto	l21
   411                           
   412                           ;main.c: 45: led_click(4);
   413  007A  3004               	movlw	4
   414  007B  286D               	goto	L2
   415  007C                     __end_of_main:	
   416                           ;main.c: 46: }
   417                           ;main.c: 47: }
   418                           ;main.c: 48: }
   419                           ;main.c: 49: }
   420                           ;main.c: 50: }
   421                           ;main.c: 53: return;
   422                           
   423                           
   424                           	psect	text1
   425  007C                     __ptext1:	
   426 ;; *************** function _led_click *****************
   427 ;; Defined at:
   428 ;;		line 21 in file "IO.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  times           2    4[BANK0 ] int 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  i               2    9[BANK0 ] int 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0
   442 ;;      Params:         0       2
   443 ;;      Locals:         0       2
   444 ;;      Temps:          0       3
   445 ;;      Totals:         0       7
   446 ;;Total ram usage:        7 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _led_click
   458  007C                     _led_click:	
   459                           
   460                           ;IO.c: 22: for(int i=0;i<times;i++){
   461                           
   462                           ;incstack = 0
   463                           ; Regs used in _led_click: [wreg+status,2]
   464  007C  1283               	bcf	3,5	;RP0=0, select bank0
   465  007D  01A9               	clrf	led_click@i
   466  007E  01AA               	clrf	led_click@i+1
   467  007F                     l47:	
   468  007F  082A               	movf	led_click@i+1,w
   469  0080  3A80               	xorlw	128
   470  0081  00A6               	movwf	??_led_click
   471  0082  0825               	movf	led_click@times+1,w
   472  0083  3A80               	xorlw	128
   473  0084  0226               	subwf	??_led_click,w
   474  0085  1D03               	skipz
   475  0086  2889               	goto	u85
   476  0087  0824               	movf	led_click@times,w
   477  0088  0229               	subwf	led_click@i,w
   478  0089                     u85:	
   479  0089  1803               	btfsc	3,0
   480  008A  0008               	return
   481                           
   482                           ;IO.c: 23: GPIObits.GP1=1;
   483  008B  1283               	bcf	3,5	;RP0=0, select bank0
   484  008C  1485               	bsf	5,1	;volatile
   485                           
   486                           ;IO.c: 24: _delay((unsigned long)((200)*(4000000/4000.0)));
   487  008D  3002               	movlw	2
   488  008E  00A8               	movwf	??_led_click+2
   489  008F  3004               	movlw	4
   490  0090  00A7               	movwf	??_led_click+1
   491  0091  30BA               	movlw	186
   492  0092  00A6               	movwf	??_led_click
   493  0093                     u177:	
   494  0093  0BA6               	decfsz	??_led_click,f
   495  0094  2893               	goto	u177
   496  0095  0BA7               	decfsz	??_led_click+1,f
   497  0096  2893               	goto	u177
   498  0097  0BA8               	decfsz	??_led_click+2,f
   499  0098  2893               	goto	u177
   500  0099  0000               	nop
   501                           
   502                           ;IO.c: 25: GPIObits.GP1=0;
   503  009A  1283               	bcf	3,5	;RP0=0, select bank0
   504  009B  1085               	bcf	5,1	;volatile
   505                           
   506                           ;IO.c: 26: _delay((unsigned long)((200)*(4000000/4000.0)));
   507  009C  3002               	movlw	2
   508  009D  00A8               	movwf	??_led_click+2
   509  009E  3004               	movlw	4
   510  009F  00A7               	movwf	??_led_click+1
   511  00A0  30BA               	movlw	186
   512  00A1  00A6               	movwf	??_led_click
   513  00A2                     u187:	
   514  00A2  0BA6               	decfsz	??_led_click,f
   515  00A3  28A2               	goto	u187
   516  00A4  0BA7               	decfsz	??_led_click+1,f
   517  00A5  28A2               	goto	u187
   518  00A6  0BA8               	decfsz	??_led_click+2,f
   519  00A7  28A2               	goto	u187
   520  00A8  0000               	nop
   521  00A9  3001               	movlw	1
   522  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   523  00AB  07A9               	addwf	led_click@i,f
   524  00AC  1803               	skipnc
   525  00AD  0AAA               	incf	led_click@i+1,f
   526  00AE  3000               	movlw	0
   527  00AF  07AA               	addwf	led_click@i+1,f
   528  00B0  287F               	goto	l47
   529  00B1                     __end_of_led_click:	
   530                           
   531                           	psect	text2
   532  00CE                     __ptext2:	
   533 ;; *************** function _Timer_init *****************
   534 ;; Defined at:
   535 ;;		line 6 in file "timer.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		None
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0
   549 ;;      Params:         0       0
   550 ;;      Locals:         0       0
   551 ;;      Temps:          0       0
   552 ;;      Totals:         0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _Timer_init
   565  00CE                     _Timer_init:	
   566                           
   567                           ;timer.c: 7: INTCONbits.GIE=1;
   568                           
   569                           ;incstack = 0
   570                           ; Regs used in _Timer_init: []
   571  00CE  178B               	bsf	11,7	;volatile
   572                           
   573                           ;timer.c: 8: INTCONbits.T0IE=1;
   574  00CF  168B               	bsf	11,5	;volatile
   575                           
   576                           ;timer.c: 9: INTCONbits.T0IF=0;
   577  00D0  110B               	bcf	11,2	;volatile
   578                           
   579                           ;timer.c: 11: OPTION_REGbits.T0CS=0;
   580  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   581  00D2  1281               	bcf	1,5	;volatile
   582                           
   583                           ;timer.c: 12: OPTION_REGbits.T0SE=0;
   584  00D3  1201               	bcf	1,4	;volatile
   585                           
   586                           ;timer.c: 13: OPTION_REGbits.PSA=0;
   587  00D4  1181               	bcf	1,3	;volatile
   588                           
   589                           ;timer.c: 14: OPTION_REGbits.PS0=0;
   590  00D5  1001               	bcf	1,0	;volatile
   591                           
   592                           ;timer.c: 15: OPTION_REGbits.PS1=0;
   593  00D6  1081               	bcf	1,1	;volatile
   594                           
   595                           ;timer.c: 16: OPTION_REGbits.PS2=0;
   596  00D7  1101               	bcf	1,2	;volatile
   597  00D8  0008               	return
   598  00D9                     __end_of_Timer_init:	
   599                           
   600                           	psect	text3
   601  00D9                     __ptext3:	
   602 ;; *************** function _IO_init *****************
   603 ;; Defined at:
   604 ;;		line 6 in file "IO.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0
   618 ;;      Params:         0       0
   619 ;;      Locals:         0       0
   620 ;;      Temps:          0       0
   621 ;;      Totals:         0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _IO_init
   634  00D9                     _IO_init:	
   635                           
   636                           ;IO.c: 8: CMCON = 0x07;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _IO_init: [wreg]
   640  00D9  3007               	movlw	7
   641  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   642  00DB  0099               	movwf	25	;volatile
   643                           
   644                           ;IO.c: 10: TRISIObits.TRISIO1=0;
   645  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   646  00DD  1085               	bcf	5,1	;volatile
   647                           
   648                           ;IO.c: 11: OPTION_REGbits.nGPPU=1;
   649  00DE  1781               	bsf	1,7	;volatile
   650                           
   651                           ;IO.c: 13: TRISIObits.TRISIO2=1;
   652  00DF  1505               	bsf	5,2	;volatile
   653                           
   654                           ;IO.c: 14: TRISIObits.TRISIO3=1;
   655  00E0  1585               	bsf	5,3	;volatile
   656                           
   657                           ;IO.c: 15: TRISIObits.TRISIO4=1;
   658  00E1  1605               	bsf	5,4	;volatile
   659                           
   660                           ;IO.c: 16: TRISIObits.TRISIO5=1;
   661  00E2  1685               	bsf	5,5	;volatile
   662  00E3  0008               	return
   663  00E4                     __end_of_IO_init:	
   664                           
   665                           	psect	text4
   666  00B1                     __ptext4:	
   667 ;; *************** function _kes *****************
   668 ;; Defined at:
   669 ;;		line 19 in file "timer.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0
   683 ;;      Params:         0       0
   684 ;;      Locals:         0       0
   685 ;;      Temps:          0       4
   686 ;;      Totals:         0       4
   687 ;;Total ram usage:        4 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		Interrupt level 1
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _kes
   698  00B1                     _kes:	
   699                           
   700                           ;timer.c: 20: if(INTCONbits.T0IF && INTCONbits.T0IE){
   701  00B1  190B               	btfsc	11,2	;volatile
   702  00B2  1E8B               	btfss	11,5	;volatile
   703  00B3  28C3               	goto	i1l68
   704                           
   705                           ;timer.c: 21: timetick++;
   706  00B4  3001               	movlw	1
   707  00B5  07B7               	addwf	_timetick,f
   708  00B6  3000               	movlw	0
   709  00B7  1803               	skipnc
   710  00B8  3001               	movlw	1
   711  00B9  07B8               	addwf	_timetick+1,f
   712  00BA  3000               	movlw	0
   713  00BB  1803               	skipnc
   714  00BC  3001               	movlw	1
   715  00BD  07B9               	addwf	_timetick+2,f
   716  00BE  3000               	movlw	0
   717  00BF  1803               	skipnc
   718  00C0  3001               	movlw	1
   719  00C1  07BA               	addwf	_timetick+3,f
   720                           
   721                           ;timer.c: 22: INTCONbits.T0IF=0;
   722  00C2  110B               	bcf	11,2	;volatile
   723  00C3                     i1l68:	
   724  00C3  0823               	movf	??_kes+3,w
   725  00C4  00DF               	movwf	95
   726  00C5  0822               	movf	??_kes+2,w
   727  00C6  008A               	movwf	10
   728  00C7  0821               	movf	??_kes+1,w
   729  00C8  0084               	movwf	4
   730  00C9  0E20               	swapf	??_kes^0,w
   731  00CA  0083               	movwf	3
   732  00CB  0EDE               	swapf	94,f
   733  00CC  0E5E               	swapf	94,w
   734  00CD  0009               	retfie
   735  00CE                     __end_of_kes:	
   736  005E                     btemp	set	94	;btemp
   737  005E                     wtemp0	set	94
   738                           
   739                           	psect	intentry
   740  0004                     __pintentry:	
   741                           ;incstack = 0
   742                           ; Regs used in _kes: [wreg]
   743                           
   744  0004                     interrupt_function:	
   745  005E                     saved_w	set	btemp
   746  0004  00DE               	movwf	btemp
   747  0005  0E03               	swapf	3,w
   748  0006  1283               	bcf	3,5	;RP0=0, select bank0
   749  0007  00A0               	movwf	??_kes
   750  0008  0804               	movf	4,w
   751  0009  00A1               	movwf	??_kes+1
   752  000A  080A               	movf	10,w
   753  000B  00A2               	movwf	??_kes+2
   754  000C  085F               	movf	btemp+1,w
   755  000D  00A3               	movwf	??_kes+3
   756  000E  28B1               	ljmp	_kes


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     19      27

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _kes in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_led_click

Critical Paths under _kes in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     258
                                             11 BANK0      8     8      0
                            _IO_init
                         _Timer_init
                          _led_click
 ---------------------------------------------------------------------------------
 (1) _led_click                                            7     5      2     258
                                              4 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _Timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _kes                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_init
   _Timer_init
   _led_click

 _kes (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     13      1B       4       43.5%
ABS                  0      0      1B       5        0.0%
DATA                 0      0      1B       6        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 15 16:41:53 2018

            __CFG_CP$OFF 0000                       l21 0071                       l47 007F  
                     u90 0041                       u91 0042                       u92 0047  
                     u85 0089                       u93 0048                      l612 0068  
                    l614 006A                      l606 0023                      l616 006C  
                    l608 005C                      u103 005A                      u177 0093  
           __CFG_CPD$OFF 0000                      u187 00A2                      _kes 00B1  
                    fsr0 0004                     ?_kes 0020                     i1l68 00C3  
                   _main 0017          __end_of_IO_init 00E4                     btemp 005E  
                   start 000F                    ??_kes 0020                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    _CMCON 0019           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 0010             __end_of_main 007C  
                 ??_main 002B                ??_IO_init 0000           __CFG_PWRTE$OFF 0000  
             _Timer_init 00CE                   saved_w 005E  __end_of__initialization 0015  
         __pcstackCOMMON 0000           _OPTION_REGbits 0081       __size_of_led_click 0035  
             __pbssBANK0 0037               __pmaintext 0017               __pintentry 0004  
            ?_Timer_init 0020           led_click@times 0024                  _IO_init 00D9  
      __end_of_led_click 00B1                  __ptext1 007C                  __ptext2 00CE  
                __ptext3 00D9                  __ptext4 00B1             __size_of_kes 001D  
   end_of_initialization 0015      __size_of_Timer_init 000B               led_click@i 0029  
    start_initialization 0010              __end_of_kes 00CE             ??_Timer_init 0000  
              ___latbits 0000            __pcstackBANK0 0020                 ?_IO_init 0020  
     __end_of_Timer_init 00D9                __pnvBANK0 0033                _led_click 007C  
      interrupt_function 0004                 _GPIObits 0005               ?_led_click 0024  
       __size_of_IO_init 000B            __size_of_main 0065                 _timetick 0037  
            ??_led_click 0026               _INTCONbits 000B                 intlevel1 0000  
           _timetochange 0033       __CFG_FOSC$INTRCCLK 0000               _TRISIObits 0085  
