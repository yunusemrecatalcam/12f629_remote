

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 15 17:25:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F629
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x5E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F629 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0019                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  008C                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0096                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0019                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0096                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0019                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136                           
   137                           	psect	nvBANK0
   138  0045                     __pnvBANK0:	
   139  0045                     _timetochange:	
   140  0045                     	ds	4
   141  000B                     _INTCONbits	set	11
   142  0019                     _CMCON	set	25
   143  0005                     _GPIObits	set	5
   144  0081                     _OPTION_REGbits	set	129
   145  0085                     _TRISIObits	set	133
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0010                     start_initialization:	
   151  0010                     __initialization:	
   152                           
   153                           ; Clear objects allocated to BANK0
   154  0010  1383               	bcf	3,7	;select IRP bank0
   155  0011  3033               	movlw	low __pbssBANK0
   156  0012  0084               	movwf	4
   157  0013  3045               	movlw	low (__pbssBANK0+18)
   158  0014  20E4               	fcall	clear_ram0
   159  0015                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  0015                     __end_of__initialization:	
   163  0015  0183               	clrf	3
   164  0016  2817               	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	bssBANK0
   167  0033                     __pbssBANK0:	
   168  0033                     _command:	
   169  0033                     	ds	10
   170  003D                     _change_state:	
   171  003D                     	ds	4
   172  0041                     _timetick:	
   173  0041                     	ds	4
   174                           
   175                           	psect	clrtext
   176  00E4                     clear_ram0:	
   177                           ;	Called with FSR containing the base address, and
   178                           ;	W with the last address+1
   179                           
   180  00E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   181  00E5                     clrloop0:	
   182  00E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   183  00E6  0A84               	incf	4,f	;increment pointer
   184  00E7  0604               	xorwf	4,w	;XOR with final address
   185  00E8  1903               	btfsc	3,2	;have we reached the end yet?
   186  00E9  3400               	retlw	0	;all done for this memory range, return
   187  00EA  0604               	xorwf	4,w	;XOR again to restore value
   188  00EB  28E5               	goto	clrloop0	;do the next byte
   189                           
   190                           	psect	cstackCOMMON
   191  0000                     __pcstackCOMMON:	
   192  0000                     ??_IO_init:	
   193  0000                     ??_Timer_init:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           	psect	cstackBANK0
   198  0020                     __pcstackBANK0:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0020                     ?_IO_init:	
   202  0020                     ?_Timer_init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0020                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0020                     ?_kes:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0020                     ??_kes:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216  0020                     	ds	4
   217  0024                     ?_led_click:	
   218  0024                     led_click@times:	
   219                           ; 1 bytes @ 0x4
   220                           
   221                           
   222                           ; 2 bytes @ 0x4
   223  0024                     	ds	2
   224  0026                     ??_led_click:	
   225                           
   226                           ; 1 bytes @ 0x6
   227  0026                     	ds	3
   228  0029                     led_click@i:	
   229                           
   230                           ; 2 bytes @ 0x9
   231  0029                     	ds	2
   232  002B                     ??_main:	
   233                           
   234                           ; 1 bytes @ 0xB
   235  002B                     	ds	8
   236                           
   237                           	psect	maintext
   238  0017                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 19 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0
   258 ;;      Params:         0       0
   259 ;;      Locals:         0       0
   260 ;;      Temps:          0       8
   261 ;;      Totals:         0       8
   262 ;;Total ram usage:        8 bytes
   263 ;; Hardware stack levels required when called:    2
   264 ;; This function calls:
   265 ;;		_IO_init
   266 ;;		_Timer_init
   267 ;;		_led_click
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           
   274                           ;psect for function _main
   275  0017                     _main:	
   276                           
   277                           ;main.c: 21: IO_init();
   278                           
   279                           ;incstack = 0
   280                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   281  0017  20CD               	fcall	_IO_init
   282                           
   283                           ;main.c: 22: Timer_init();
   284  0018  20D9               	fcall	_Timer_init
   285                           
   286                           ;main.c: 24: GPIObits.GP1 =1;
   287  0019  1283               	bcf	3,5	;RP0=0, select bank0
   288  001A  1485               	bsf	5,1	;volatile
   289  001B                     L1:	
   290                           
   291                           ;main.c: 25: timetochange=timetick;
   292  001B  0844               	movf	_timetick+3,w
   293  001C  00C8               	movwf	_timetochange+3
   294  001D  0843               	movf	_timetick+2,w
   295  001E  00C7               	movwf	_timetochange+2
   296  001F  0842               	movf	_timetick+1,w
   297  0020  00C6               	movwf	_timetochange+1
   298  0021  0841               	movf	_timetick,w
   299  0022  00C5               	movwf	_timetochange
   300  0023                     l633:	
   301                           ;main.c: 31: while(1){
   302                           
   303                           
   304                           ;main.c: 32: if(timetick-timetochange>=100){
   305  0023  0841               	movf	_timetick,w
   306  0024  00AB               	movwf	??_main
   307  0025  0842               	movf	_timetick+1,w
   308  0026  00AC               	movwf	??_main+1
   309  0027  0843               	movf	_timetick+2,w
   310  0028  00AD               	movwf	??_main+2
   311  0029  0844               	movf	_timetick+3,w
   312  002A  00AE               	movwf	??_main+3
   313  002B  0945               	comf	_timetochange,w
   314  002C  00AF               	movwf	??_main+4
   315  002D  0946               	comf	_timetochange+1,w
   316  002E  00B0               	movwf	??_main+5
   317  002F  0947               	comf	_timetochange+2,w
   318  0030  00B1               	movwf	??_main+6
   319  0031  0948               	comf	_timetochange+3,w
   320  0032  00B2               	movwf	??_main+7
   321  0033  0AAF               	incf	??_main+4,f
   322  0034  1903               	skipnz
   323  0035  0AB0               	incf	??_main+5,f
   324  0036  1903               	skipnz
   325  0037  0AB1               	incf	??_main+6,f
   326  0038  1903               	skipnz
   327  0039  0AB2               	incf	??_main+7,f
   328  003A  082F               	movf	??_main+4,w
   329  003B  07AB               	addwf	??_main,f
   330  003C  0830               	movf	??_main+5,w
   331  003D  1803               	skipnc
   332  003E  0F30               	incfsz	??_main+5,w
   333  003F  2841               	goto	u110
   334  0040  2842               	goto	u111
   335  0041                     u110:	
   336  0041  07AC               	addwf	??_main+1,f
   337  0042                     u111:	
   338  0042  0831               	movf	??_main+6,w
   339  0043  1803               	skipnc
   340  0044  0F31               	incfsz	??_main+6,w
   341  0045  2847               	goto	u112
   342  0046  2848               	goto	u113
   343  0047                     u112:	
   344  0047  07AD               	addwf	??_main+2,f
   345  0048                     u113:	
   346  0048  0832               	movf	??_main+7,w
   347  0049  1803               	skipnc
   348  004A  0A32               	incf	??_main+7,w
   349  004B  07AE               	addwf	??_main+3,f
   350  004C  082E               	movf	??_main+3,w
   351  004D  1D03               	btfss	3,2
   352  004E  285B               	goto	l635
   353  004F  082D               	movf	??_main+2,w
   354  0050  1D03               	btfss	3,2
   355  0051  285B               	goto	l635
   356  0052  082C               	movf	??_main+1,w
   357  0053  1D03               	btfss	3,2
   358  0054  285B               	goto	l635
   359  0055  3064               	movlw	100
   360  0056  022B               	subwf	??_main,w
   361  0057  1D03               	skipz
   362  0058  2859               	goto	u123
   363  0059                     u123:	
   364  0059  1C03               	btfss	3,0
   365  005A  2823               	goto	l633
   366  005B                     l635:	
   367                           
   368                           ;main.c: 33: GPIObits.GP1^=1;
   369  005B  0C05               	rrf	5,w	;volatile
   370  005C  3901               	andlw	1
   371  005D  00AB               	movwf	??_main
   372  005E  3001               	movlw	1
   373  005F  06AB               	xorwf	??_main,f
   374  0060  0DAB               	rlf	??_main,f
   375  0061  0805               	movf	5,w	;volatile
   376  0062  062B               	xorwf	??_main,w
   377  0063  39FD               	andlw	-3
   378  0064  062B               	xorwf	??_main,w
   379  0065  0085               	movwf	5	;volatile
   380  0066  281B               	goto	L1
   381  0067                     l639:	
   382                           ;main.c: 34: timetochange=timetick;
   383                           
   384                           
   385                           ;main.c: 40: led_click(1);
   386  0067  3001               	movlw	1
   387  0068  286C               	goto	L2
   388  0069                     l641:	
   389                           ;main.c: 41: }else{
   390                           
   391                           
   392                           ;main.c: 43: led_click(2);
   393  0069  3002               	movlw	2
   394  006A  286C               	goto	L2
   395  006B                     l643:	
   396                           ;main.c: 44: }else{
   397                           
   398                           
   399                           ;main.c: 46: led_click(3);
   400  006B  3003               	movlw	3
   401  006C                     L2:	
   402  006C  00A4               	movwf	led_click@times
   403  006D  3000               	movlw	0
   404  006E  00A5               	movwf	led_click@times+1
   405  006F  207B               	fcall	_led_click
   406  0070                     l23:	
   407                           ;main.c: 35: }
   408                           ;main.c: 36: }
   409                           ;main.c: 37: while (1) {
   410                           
   411                           ;main.c: 47: }else{
   412                           
   413                           
   414                           ;main.c: 39: if(GPIObits.GP2){
   415  0070  1283               	bcf	3,5	;RP0=0, select bank0
   416  0071  1905               	btfsc	5,2	;volatile
   417  0072  2867               	goto	l639
   418                           
   419                           ;main.c: 42: if(GPIObits.GP3){
   420  0073  1985               	btfsc	5,3	;volatile
   421  0074  2869               	goto	l641
   422                           
   423                           ;main.c: 45: if(GPIObits.GP4){
   424  0075  1A05               	btfsc	5,4	;volatile
   425  0076  286B               	goto	l643
   426                           
   427                           ;main.c: 48: if(GPIObits.GP5){
   428  0077  1E85               	btfss	5,5	;volatile
   429  0078  2870               	goto	l23
   430                           
   431                           ;main.c: 49: led_click(4);
   432  0079  3004               	movlw	4
   433  007A  286C               	goto	L2
   434  007B                     __end_of_main:	
   435                           ;main.c: 50: }
   436                           ;main.c: 51: }
   437                           ;main.c: 52: }
   438                           ;main.c: 53: }
   439                           ;main.c: 54: }
   440                           ;main.c: 57: return;
   441                           
   442                           
   443                           	psect	text1
   444  007B                     __ptext1:	
   445 ;; *************** function _led_click *****************
   446 ;; Defined at:
   447 ;;		line 26 in file "IO.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  times           2    4[BANK0 ] int 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  i               2    9[BANK0 ] int 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0
   461 ;;      Params:         0       2
   462 ;;      Locals:         0       2
   463 ;;      Temps:          0       3
   464 ;;      Totals:         0       7
   465 ;;Total ram usage:        7 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    1
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _led_click
   477  007B                     _led_click:	
   478                           
   479                           ;IO.c: 27: for(int i=0;i<times;i++){
   480                           
   481                           ;incstack = 0
   482                           ; Regs used in _led_click: [wreg+status,2]
   483  007B  1283               	bcf	3,5	;RP0=0, select bank0
   484  007C  01A9               	clrf	led_click@i
   485  007D  01AA               	clrf	led_click@i+1
   486  007E                     l53:	
   487  007E  082A               	movf	led_click@i+1,w
   488  007F  3A80               	xorlw	128
   489  0080  00A6               	movwf	??_led_click
   490  0081  0825               	movf	led_click@times+1,w
   491  0082  3A80               	xorlw	128
   492  0083  0226               	subwf	??_led_click,w
   493  0084  1D03               	skipz
   494  0085  2888               	goto	u105
   495  0086  0824               	movf	led_click@times,w
   496  0087  0229               	subwf	led_click@i,w
   497  0088                     u105:	
   498  0088  1803               	btfsc	3,0
   499  0089  0008               	return
   500                           
   501                           ;IO.c: 28: GPIObits.GP1=1;
   502  008A  1283               	bcf	3,5	;RP0=0, select bank0
   503  008B  1485               	bsf	5,1	;volatile
   504                           
   505                           ;IO.c: 29: _delay((unsigned long)((200)*(4000000/4000.0)));
   506  008C  3002               	movlw	2
   507  008D  00A8               	movwf	??_led_click+2
   508  008E  3004               	movlw	4
   509  008F  00A7               	movwf	??_led_click+1
   510  0090  30BA               	movlw	186
   511  0091  00A6               	movwf	??_led_click
   512  0092                     u237:	
   513  0092  0BA6               	decfsz	??_led_click,f
   514  0093  2892               	goto	u237
   515  0094  0BA7               	decfsz	??_led_click+1,f
   516  0095  2892               	goto	u237
   517  0096  0BA8               	decfsz	??_led_click+2,f
   518  0097  2892               	goto	u237
   519  0098  0000               	nop
   520                           
   521                           ;IO.c: 30: GPIObits.GP1=0;
   522  0099  1283               	bcf	3,5	;RP0=0, select bank0
   523  009A  1085               	bcf	5,1	;volatile
   524                           
   525                           ;IO.c: 31: _delay((unsigned long)((200)*(4000000/4000.0)));
   526  009B  3002               	movlw	2
   527  009C  00A8               	movwf	??_led_click+2
   528  009D  3004               	movlw	4
   529  009E  00A7               	movwf	??_led_click+1
   530  009F  30BA               	movlw	186
   531  00A0  00A6               	movwf	??_led_click
   532  00A1                     u247:	
   533  00A1  0BA6               	decfsz	??_led_click,f
   534  00A2  28A1               	goto	u247
   535  00A3  0BA7               	decfsz	??_led_click+1,f
   536  00A4  28A1               	goto	u247
   537  00A5  0BA8               	decfsz	??_led_click+2,f
   538  00A6  28A1               	goto	u247
   539  00A7  0000               	nop
   540  00A8  3001               	movlw	1
   541  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   542  00AA  07A9               	addwf	led_click@i,f
   543  00AB  1803               	skipnc
   544  00AC  0AAA               	incf	led_click@i+1,f
   545  00AD  3000               	movlw	0
   546  00AE  07AA               	addwf	led_click@i+1,f
   547  00AF  287E               	goto	l53
   548  00B0                     __end_of_led_click:	
   549                           
   550                           	psect	text2
   551  00D9                     __ptext2:	
   552 ;; *************** function _Timer_init *****************
   553 ;; Defined at:
   554 ;;		line 6 in file "timer.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		None
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0
   568 ;;      Params:         0       0
   569 ;;      Locals:         0       0
   570 ;;      Temps:          0       0
   571 ;;      Totals:         0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _Timer_init
   584  00D9                     _Timer_init:	
   585                           
   586                           ;timer.c: 7: INTCONbits.GIE=1;
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _Timer_init: []
   590  00D9  178B               	bsf	11,7	;volatile
   591                           
   592                           ;timer.c: 8: INTCONbits.T0IE=1;
   593  00DA  168B               	bsf	11,5	;volatile
   594                           
   595                           ;timer.c: 9: INTCONbits.T0IF=0;
   596  00DB  110B               	bcf	11,2	;volatile
   597                           
   598                           ;timer.c: 11: OPTION_REGbits.T0CS=0;
   599  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   600  00DD  1281               	bcf	1,5	;volatile
   601                           
   602                           ;timer.c: 12: OPTION_REGbits.T0SE=0;
   603  00DE  1201               	bcf	1,4	;volatile
   604                           
   605                           ;timer.c: 13: OPTION_REGbits.PSA=0;
   606  00DF  1181               	bcf	1,3	;volatile
   607                           
   608                           ;timer.c: 14: OPTION_REGbits.PS0=0;
   609  00E0  1001               	bcf	1,0	;volatile
   610                           
   611                           ;timer.c: 15: OPTION_REGbits.PS1=0;
   612  00E1  1081               	bcf	1,1	;volatile
   613                           
   614                           ;timer.c: 16: OPTION_REGbits.PS2=0;
   615  00E2  1101               	bcf	1,2	;volatile
   616  00E3  0008               	return
   617  00E4                     __end_of_Timer_init:	
   618                           
   619                           	psect	text3
   620  00CD                     __ptext3:	
   621 ;; *************** function _IO_init *****************
   622 ;; Defined at:
   623 ;;		line 10 in file "IO.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0
   637 ;;      Params:         0       0
   638 ;;      Locals:         0       0
   639 ;;      Temps:          0       0
   640 ;;      Totals:         0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _IO_init
   653  00CD                     _IO_init:	
   654                           
   655                           ;IO.c: 12: CMCON = 0x07;
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _IO_init: [wreg]
   659  00CD  3007               	movlw	7
   660  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   661  00CF  0099               	movwf	25	;volatile
   662                           
   663                           ;IO.c: 14: TRISIObits.TRISIO1=0;
   664  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   665  00D1  1085               	bcf	5,1	;volatile
   666                           
   667                           ;IO.c: 15: OPTION_REGbits.nGPPU=1;
   668  00D2  1781               	bsf	1,7	;volatile
   669                           
   670                           ;IO.c: 17: TRISIObits.TRISIO2=1;
   671  00D3  1505               	bsf	5,2	;volatile
   672                           
   673                           ;IO.c: 18: TRISIObits.TRISIO3=1;
   674  00D4  1585               	bsf	5,3	;volatile
   675                           
   676                           ;IO.c: 19: TRISIObits.TRISIO4=1;
   677  00D5  1605               	bsf	5,4	;volatile
   678                           
   679                           ;IO.c: 20: TRISIObits.TRISIO5=1;
   680  00D6  1685               	bsf	5,5	;volatile
   681                           
   682                           ;IO.c: 21: TRISIObits.TRISIO0=0;
   683  00D7  1005               	bcf	5,0	;volatile
   684  00D8  0008               	return
   685  00D9                     __end_of_IO_init:	
   686                           
   687                           	psect	text4
   688  00B0                     __ptext4:	
   689 ;; *************** function _kes *****************
   690 ;; Defined at:
   691 ;;		line 19 in file "timer.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0
   705 ;;      Params:         0       0
   706 ;;      Locals:         0       0
   707 ;;      Temps:          0       4
   708 ;;      Totals:         0       4
   709 ;;Total ram usage:        4 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		Interrupt level 1
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _kes
   720  00B0                     _kes:	
   721                           
   722                           ;timer.c: 20: if(INTCONbits.T0IF && INTCONbits.T0IE){
   723  00B0  190B               	btfsc	11,2	;volatile
   724  00B1  1E8B               	btfss	11,5	;volatile
   725  00B2  28C2               	goto	i1l77
   726                           
   727                           ;timer.c: 21: timetick++;
   728  00B3  3001               	movlw	1
   729  00B4  07C1               	addwf	_timetick,f
   730  00B5  3000               	movlw	0
   731  00B6  1803               	skipnc
   732  00B7  3001               	movlw	1
   733  00B8  07C2               	addwf	_timetick+1,f
   734  00B9  3000               	movlw	0
   735  00BA  1803               	skipnc
   736  00BB  3001               	movlw	1
   737  00BC  07C3               	addwf	_timetick+2,f
   738  00BD  3000               	movlw	0
   739  00BE  1803               	skipnc
   740  00BF  3001               	movlw	1
   741  00C0  07C4               	addwf	_timetick+3,f
   742                           
   743                           ;timer.c: 22: INTCONbits.T0IF=0;
   744  00C1  110B               	bcf	11,2	;volatile
   745  00C2                     i1l77:	
   746  00C2  0823               	movf	??_kes+3,w
   747  00C3  00DF               	movwf	95
   748  00C4  0822               	movf	??_kes+2,w
   749  00C5  008A               	movwf	10
   750  00C6  0821               	movf	??_kes+1,w
   751  00C7  0084               	movwf	4
   752  00C8  0E20               	swapf	??_kes^0,w
   753  00C9  0083               	movwf	3
   754  00CA  0EDE               	swapf	94,f
   755  00CB  0E5E               	swapf	94,w
   756  00CC  0009               	retfie
   757  00CD                     __end_of_kes:	
   758  005E                     btemp	set	94	;btemp
   759  005E                     wtemp0	set	94
   760                           
   761                           	psect	intentry
   762  0004                     __pintentry:	
   763                           ;incstack = 0
   764                           ; Regs used in _kes: [wreg]
   765                           
   766  0004                     interrupt_function:	
   767  005E                     saved_w	set	btemp
   768  0004  00DE               	movwf	btemp
   769  0005  0E03               	swapf	3,w
   770  0006  1283               	bcf	3,5	;RP0=0, select bank0
   771  0007  00A0               	movwf	??_kes
   772  0008  0804               	movf	4,w
   773  0009  00A1               	movwf	??_kes+1
   774  000A  080A               	movf	10,w
   775  000B  00A2               	movwf	??_kes+2
   776  000C  085F               	movf	btemp+1,w
   777  000D  00A3               	movwf	??_kes+3
   778  000E  28B0               	ljmp	_kes


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     19      41

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _kes in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_led_click

Critical Paths under _kes in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     258
                                             11 BANK0      8     8      0
                            _IO_init
                         _Timer_init
                          _led_click
 ---------------------------------------------------------------------------------
 (1) _led_click                                            7     5      2     258
                                              4 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _Timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _kes                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_init
   _Timer_init
   _led_click

 _kes (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     13      29       4       66.1%
ABS                  0      0      29       5        0.0%
DATA                 0      0      29       6        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 15 17:25:06 2018

            __CFG_CP$OFF 0000                       l23 0070                       l53 007E  
                     fsr 0004                      l641 0069                      l633 0023  
                    l643 006B                      l635 005B                      l639 0067  
                    u110 0041                      u111 0042                      u112 0047  
                    u105 0088                      u113 0048                      u123 0059  
                    u237 0092                      u247 00A1             __CFG_CPD$OFF 0000  
                    _kes 00B0                      fsr0 0004                      indf 0000  
                   ?_kes 0020                     i1l77 00C2                     _main 0017  
        __end_of_IO_init 00D9                     btemp 005E                     start 000F  
                  ??_kes 0020                    ?_main 0020            __CFG_WDTE$OFF 0000  
                  _CMCON 0019           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 0010             __end_of_main 007B                   ??_main 002B  
              ??_IO_init 0000           __CFG_PWRTE$OFF 0000               _Timer_init 00D9  
                 saved_w 005E  __end_of__initialization 0015             _change_state 003D  
         __pcstackCOMMON 0000           _OPTION_REGbits 0081       __size_of_led_click 0035  
             __pbssBANK0 0033               __pmaintext 0017               __pintentry 0004  
            ?_Timer_init 0020           led_click@times 0024                  _IO_init 00CD  
      __end_of_led_click 00B0                  __ptext1 007B                  __ptext2 00D9  
                __ptext3 00CD                  __ptext4 00B0                  _command 0033  
           __size_of_kes 001D                  clrloop0 00E5     end_of_initialization 0015  
    __size_of_Timer_init 000B               led_click@i 0029      start_initialization 0010  
            __end_of_kes 00CD             ??_Timer_init 0000                ___latbits 0000  
          __pcstackBANK0 0020                 ?_IO_init 0020       __end_of_Timer_init 00E4  
              __pnvBANK0 0045                _led_click 007B        interrupt_function 0004  
               _GPIObits 0005                clear_ram0 00E4               ?_led_click 0024  
       __size_of_IO_init 000C            __size_of_main 0064                 _timetick 0041  
            ??_led_click 0026               _INTCONbits 000B                 intlevel1 0000  
           _timetochange 0045       __CFG_FOSC$INTRCCLK 0000               _TRISIObits 0085  
